#include<stdio.h>
#include<stdlib.h>
void read_graph(int adj_mat[50][50],int n)
{
    int i,j;
    char reply;
    for(i=1;i<=n;i++)
    {
        for(j=1;j<=n;j++)
        {
            if(i==j)
            {
                adj_mat[i][j]=0;
                continue;
            }
            fflush(stdin);
            printf("\nVertices %d & %d are Adjacent?(Y/N):",i,j);
            scanf("%c",&reply);
            fflush(stdin);
            if(reply=='y'||reply=='Y')
                adj_mat[i][j]=1;
            else
                adj_mat[i][j]=0;
        }
    }
}
void dir_graph()
{
    int adj_mat[50][50],n,in_deg,out_deg,i,j;
    printf("\nEnter the number of Vertices: ");
    scanf("%d",&n);
    read_graph(adj_mat,n);
    printf("\nVertex\t\tIn_Degree\tOut_Degree\tTotal_Degree");
    for(i=1;i<=n;i++)
    {
        in_deg=out_deg=0;
	for(j=1;j<=n;j++)
	{
        if(adj_mat[j][i]==1)
                in_deg++;
	}
    for(j=1;j<=n;j++)
        if(adj_mat[i][j]==1)
                out_deg++;
            printf("\n\n%5d\t\t\t%d\t\t%d\t\t%d\n\n",i,in_deg,out_deg,in_deg+out_deg);
    }
}
void undir_graph()
{
    int adj_mat[50][50],deg,i,j,n;
    printf("\nEnter the number of Vertices: ");
    scanf("%d",&n);
    read_graph(adj_mat,n);
    printf("\nVertex\tDegree");
    for (i=1;i<=n;i++)
    {
        deg=0;
        for(j=1;j<=n;j++)
            if(adj_mat[i][j]==1)
                deg++;
        printf("\n\n%5d\t\t%d\n\n",i,deg);
    }
}
int main()
{
   int option;
   do
   {
        printf("\n 1.Directed Graph ");
        printf("\n 2.Undirected Graph ");
        printf("\n 3.Exit ");
        printf("\nSelect a proper option: ");
        scanf("%d",&option);
        switch(option)
        {
                case 1: dir_graph();
                        break;
                case 2: undir_graph();
                         break;
                case 3: exit(0);
        }
    }while(1);
}
